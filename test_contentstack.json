{
  "add_items_to_a_release": {
    "name": "add_items_to_a_release",
    "description": "This tool programmatically adds specified content items to a designated release within a Contentstack stack branch by accepting structured item data in JSON format, enabling automated release management and deployment workflows.",
    "mapper": {
      "apiUrl": "/v3/releases/release_id/items",
      "method": "POST",
      "body": "item_data",
      "params": {
        "release_id": "release_id"
      },
      "queryParams": {
        "include_branch": "include_branch"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "release_id",
        "item_data"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "release_id": {
          "type": "string",
          "description": "Select a release in which you want to add the items.",
          "default": ""
        },
        "item_data": {
          "type": "string",
          "description": "Enter the data to be added in JSON format.",
          "default": "{\n        \"items\": [\n          {\n            \"uid\": \"entry_uid\",\n            \"version\": 1,\n            \"locale\": \"en-us\",\n            \"content_type_uid\": \"demo\",\n            \"action\": \"publish\"\n          },\n          {\n            \"uid\": \"asset_uid\",\n            \"version\": 1,\n            \"locale\": \"en-us\",\n            \"content_type_uid\": \"built_io_upload\",\n            \"action\": \"publish\"\n          }\n        ]\n      }\n      "
        },
        "include_branch": {
          "type": "boolean"
        }
      }
    }
  },
  "assign_reassign_a_branch_alias": {
    "name": "assign_reassign_a_branch_alias",
    "description": "This tool assigns or reassigns a branch alias within a stack, enabling branch identification and routing. It requires specifying the alias identifier, the target branch, and the assignment action.",
    "mapper": {
      "apiUrl": "/v3/stacks/branch_aliases/branch_alias_id",
      "method": "PUT",
      "params": {
        "branch_alias_id": "branch_alias_id"
      },
      "queryParams": {
        "force": "assign_action === \"Reassign\""
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "assign_action",
        "branch_alias_id",
        "target_branch"
      ],
      "properties": {
        "assign_action": {
          "type": "string",
          "description": "Select an action to assign/reassign an existing/new alias to a branch.",
          "default": "Assign"
        },
        "branch_alias_id": {
          "type": "string",
          "description": "Select an alias to assign to a branch. If you select Assign, make sure to manually enter the new alias name before assigning it to the branch.",
          "default": ""
        },
        "target_branch": {
          "type": "string",
          "description": "Select the target branch to which you want to assign or reassign an alias.",
          "default": ""
        }
      }
    }
  },
  "clone_a_release": {
    "name": "clone_a_release",
    "description": "This tool creates a duplicate of an existing release in the specified branch, assigning a new name and optional description to the cloned release. Release management, cloning.",
    "mapper": {
      "apiUrl": "/v3/releases/release_id/clone",
      "method": "POST",
      "body": "body",
      "params": {
        "release_id": "release_id"
      },
      "queryParams": {
        "include_branch": "include_branch"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "release_id",
        "name"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "release_id": {
          "type": "string",
          "description": "Select a release you want to clone.",
          "default": ""
        },
        "name": {
          "type": "string",
          "description": "Enter a suitable name for the cloned release.",
          "default": ""
        },
        "description": {
          "type": "string",
          "description": "Enter a suitable description for the cloned release.",
          "default": ""
        },
        "include_branch": {
          "type": "boolean"
        }
      }
    }
  },
  "create_an_asset": {
    "name": "create_an_asset",
    "description": "This tool creates a new asset in the specified stack branch by uploading a file from a provided URL, assigning a title, file name, and optional description, and saving it to a designated folder. Keywords: asset creation, file upload.",
    "mapper": {
      "apiUrl": "/v3/assets",
      "method": "POST",
      "body": "data"
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "key",
        "body",
        "title"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "title": {
          "type": "string",
          "description": "Specify a title for the asset."
        },
        "key": {
          "type": "string",
          "description": "Specify a file name for the asset."
        },
        "body": {
          "type": "string",
          "description": "Specify an input URL to create an asset."
        },
        "description": {
          "type": "string",
          "description": "Specify a description for the asset."
        },
        "folder_id": {
          "type": "string",
          "description": "Select a destination folder for saving the created asset."
        }
      }
    }
  },
  "create_a_branch": {
    "name": "create_a_branch",
    "description": "This tool creates a new branch within a specified stack by duplicating all content types, entries, and assets from the designated source branch. Branch management, stack operations.",
    "mapper": {
      "apiUrl": "/v3/stacks/branches",
      "method": "POST",
      "body": "branch_data"
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "source_branch",
        "branch_uid"
      ],
      "properties": {
        "source_branch": {
          "type": "string",
          "description": "Select a source branch from your stack. This retrieves all the associated content types, entries, and assets from the source branch, then creates a new branch.",
          "default": "main"
        },
        "branch_uid": {
          "type": "string",
          "description": "Specify a UID to create a branch. Ensure it is  lowercase, has no space, and is maximum 15 characters."
        }
      }
    }
  },
  "localize_an_entry": {
    "name": "localize_an_entry",
    "description": "This tool localizes a specified entry within a stack by creating or updating its content for the target locale, ensuring the entry becomes independent from the fallback locale. Supports branch selection, content type, entry identification, and locale specification. Localization, entry management.",
    "mapper": {
      "apiUrl": "/v3/content_types/content_type_name/entries/entry_id",
      "method": "PUT",
      "body": "entry_data",
      "params": {
        "content_type_name": "content_type_name",
        "entry_id": "entry_id"
      },
      "queryParams": {
        "locale": "locale",
        "include_branch": "include_branch"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "content_type_name",
        "entry_data",
        "entry_id",
        "locale"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "content_type_name": {
          "type": "string",
          "description": "Select a content type to localize the entry.",
          "default": ""
        },
        "entry_id": {
          "type": "string",
          "description": "Select an entry that you want to localize.",
          "default": ""
        },
        "locale": {
          "type": "string",
          "description": "Select a locale (language) in which you want to localize the entry."
        },
        "entry_data": {
          "type": "object",
          "description": "The fields should be wrapped by an entry object {'entry':{...data}}"
        },
        "include_branch": {
          "type": "boolean"
        }
      }
    }
  },
  "create_a_release": {
    "name": "create_a_release",
    "description": "This tool creates a new empty release object within the specified stack branch, initializing it with a required name and optional description; supports branch selection and inclusion parameters for release management.",
    "mapper": {
      "apiUrl": "/v3/releases",
      "method": "POST",
      "body": "release_data",
      "queryParams": {
        "include_branch": "include_branch"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Enter a suitable name for the release."
        },
        "description": {
          "type": "string",
          "description": "Enter a suitable description for the release."
        },
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "include_branch": {
          "type": "boolean"
        }
      }
    }
  },
  "create_a_taxonomy": {
    "name": "create_a_taxonomy",
    "description": "This tool creates a new taxonomy object within the specified stack, assigning the provided UID, name, and optional description for structured content classification. Keywords: taxonomy, stack",
    "mapper": {
      "apiUrl": "/v3/taxonomies",
      "method": "POST",
      "body": "taxonomy"
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "uid",
        "name"
      ],
      "properties": {
        "uid": {
          "type": "string",
          "description": "Specify a UID to create a taxonomy."
        },
        "name": {
          "type": "string",
          "description": "Specify a title for the taxonomy."
        },
        "description": {
          "type": "string",
          "description": "Specify a description for the taxonomy."
        }
      }
    }
  },
  "create_a_term": {
    "name": "create_a_term",
    "description": "This tool creates a new term within a specified taxonomy by assigning a unique identifier, name, order, and optional parent term. Taxonomy, term creation.",
    "mapper": {
      "apiUrl": "/v3/taxonomies/taxonomy_uid/terms",
      "method": "POST",
      "params": {
        "taxonomy_uid": "taxonomy_uid"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "taxonomy_uid",
        "uid",
        "name",
        "order"
      ],
      "properties": {
        "taxonomy_uid": {
          "type": "string",
          "description": "Select a taxonomy to create a term."
        },
        "uid": {
          "type": "string",
          "description": "Specify a UID to create a term."
        },
        "name": {
          "type": "string",
          "description": "Specify a title for the term. It must contain only alphanumeric values and underscores."
        },
        "order": {
          "type": "number",
          "description": "Specify the placement order of your term."
        },
        "parent_uid": {
          "type": "string",
          "description": "Select the parent to create a term."
        }
      }
    }
  },
  "delete_a_branch_alias": {
    "name": "delete_a_branch_alias",
    "description": "This tool deletes the specified branch alias from the target stack, removing the alias reference and disassociating it from all related branches.",
    "mapper": {
      "apiUrl": "/v3/stacks/branch_aliases/branch_alias_id",
      "method": "DELETE",
      "queryParams": {
        "force": "force"
      },
      "params": {
        "branch_alias_id": "branch_alias_id"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "branch_alias_id"
      ],
      "properties": {
        "branch_alias_id": {
          "type": "string",
          "description": "Select a branch alias to delete.",
          "default": ""
        }
      }
    }
  },
  "delete_an_asset": {
    "name": "delete_an_asset",
    "description": "This tool permanently deletes the specified asset from the selected branch within the stack. Asset management, deletion",
    "mapper": {
      "apiUrl": "/v3/assets/asset_id",
      "method": "DELETE",
      "params": {
        "asset_id": "asset_id"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "asset_id"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "asset_id": {
          "type": "string",
          "description": "Select an asset to delete."
        }
      }
    }
  },
  "delete_a_branch": {
    "name": "delete_a_branch",
    "description": "This tool deletes a specified branch within a stack, permanently removing all associated content types and assets. Keywords: branch deletion, stack management.",
    "mapper": {
      "apiUrl": "/v3/stacks/branches/branch_id",
      "method": "DELETE",
      "params": {
        "branch_id": "branch_id"
      },
      "queryParams": {
        "force": "force"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "branch_id"
      ],
      "properties": {
        "branch_id": {
          "type": "string",
          "description": "Select a branch to delete. This deletes all the content types and assets in the branch.",
          "default": ""
        }
      }
    }
  },
  "delete_a_taxonomy": {
    "name": "delete_a_taxonomy",
    "description": "This tool deletes the specified taxonomy and all associated terms from the stack.",
    "mapper": {
      "apiUrl": "/v3/taxonomies/taxonomy_uid",
      "method": "DELETE",
      "params": {
        "taxonomy_uid": "taxonomy_uid"
      },
      "queryParams": {
        "force": "force"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "taxonomy_uid"
      ],
      "properties": {
        "taxonomy_uid": {
          "type": "string",
          "description": "Select a taxonomy to delete. This deletes all the associated terms within the selected taxonomy."
        },
        "force": {
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "delete_a_term": {
    "name": "delete_a_term",
    "description": "This tool deletes a specified term from a taxonomy using the provided taxonomy_uid and term_uid parameters; supports forced deletion via the force flag. Keywords: taxonomy, term deletion.",
    "mapper": {
      "apiUrl": "/v3/taxonomies/taxonomy_uid/terms/term_uid",
      "method": "DELETE",
      "params": {
        "taxonomy_uid": "taxonomy_uid",
        "term_uid": "term_uid"
      },
      "queryParams": {
        "force": "force"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "taxonomy_uid",
        "term_uid"
      ],
      "properties": {
        "taxonomy_uid": {
          "type": "string",
          "description": "Select a taxonomy to delete a term."
        },
        "term_uid": {
          "type": "string",
          "description": "Select a term to delete."
        },
        "force": {
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "deploy_a_release": {
    "name": "deploy_a_release",
    "description": "This tool deploys a specified release to one or more target environments within a Contentstack stack, supporting branch selection and optional scheduling for automated release publishing. Keywords: release deployment, environment.",
    "mapper": {
      "apiUrl": "/v3/releases/release_id/deploy",
      "method": "POST",
      "body": "body",
      "params": {
        "release_id": "release_id"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "release_id",
        "environments"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "release_id": {
          "type": "string",
          "description": "Select a release you want to deploy.",
          "default": ""
        },
        "environments": {
          "type": "string",
          "description": "Select the environment(s) in which you want to perform the release deploy action.",
          "default": ""
        },
        "scheduled_at": {
          "type": "string",
          "description": "Schedule the release publish in “YYYY-MM-DD HH:MM:SS” format."
        }
      }
    }
  },
  "get_a_single_merge_job": {
    "name": "get_a_single_merge_job",
    "description": "This tool retrieves detailed information for a specified merge job within a stack, using the provided merge_job_uid parameter. Keywords: merge job, stack.",
    "mapper": {
      "apiUrl": "/v3/stacks/branches_queue/merge_job_uid",
      "method": "GET"
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "merge_job_uid"
      ],
      "properties": {
        "merge_job_uid": {
          "type": "string",
          "description": "Select a merge job to fetch its details.",
          "default": ""
        }
      }
    }
  },
  "get_user_information": {
    "name": "get_user_information",
    "description": "This tool retrieves detailed information for the specified user ID from the Contentstack stack, supporting user management and audit operations.",
    "mapper": {
      "apiUrl": "/user_profiles",
      "method": "POST",
      "body": "user_ids"
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "user_ids"
      ],
      "properties": {
        "user_ids": {
          "type": "string",
          "description": "Enter a user ID to fetch the details.",
          "default": ""
        }
      }
    }
  },
  "import_a_taxonomy": {
    "name": "import_a_taxonomy",
    "description": "This tool imports a taxonomy and its associated terms into the target stack using the specified data format and payload.",
    "mapper": {
      "apiUrl": "/v3/taxonomies/import",
      "method": "POST",
      "body": "formData"
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "format",
        "body"
      ],
      "properties": {
        "format": {
          "type": "string",
          "description": "Select the format in which you want to import the taxonomy.",
          "default": "json"
        },
        "body": {
          "type": "string",
          "description": "Specify the data in JSON or CSV format to import."
        }
      }
    }
  },
  "merge_branch": {
    "name": "merge_branch",
    "description": "This tool merges content types and global fields from the specified compare (source) branch into the designated base (target) branch using the selected merge strategy.",
    "mapper": {
      "apiUrl": "/v3/stacks/branches_merge",
      "method": "POST",
      "body": "merging_data",
      "queryParams": {
        "base_branch": "base_branch",
        "compare_branch": "compare_branch",
        "default_merge_strategy": "merge_strategy",
        "merge_comment": "merge_comment"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "base_branch",
        "compare_branch",
        "merge_strategy",
        "merge_comment"
      ],
      "properties": {
        "compare_branch": {
          "type": "string",
          "description": "Select a compare (source) branch to copy the content types and global fields.",
          "default": ""
        },
        "base_branch": {
          "type": "string",
          "description": "Select a base (target) branch in which you want to merge the data from the compare branch.",
          "default": "main"
        },
        "merge_strategy": {
          "type": "string",
          "description": "Select a merge strategy to merge the branch.",
          "default": "ignore"
        },
        "merge_comment": {
          "type": "string",
          "description": "Specify additional descriptive comment(s) for the merge action. The specified comments can be fetched via the ‘Get a Single Merge Job’ action for future reference."
        }
      }
    }
  },
  "publish_an_asset": {
    "name": "publish_an_asset",
    "description": "This tool publishes a specified asset from a selected branch to one or more environments and locales within a stack, with optional scheduling for future deployment. Keywords: asset publishing, environment.",
    "mapper": {
      "apiUrl": "/v3/assets/asset/publish",
      "method": "POST",
      "body": "body",
      "params": {
        "asset": "asset"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "asset",
        "environments"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "asset": {
          "type": "string",
          "description": "Select an asset to publish.",
          "default": ""
        },
        "environments": {
          "type": "string",
          "description": "Select the environment(s) in which you want to publish the asset.",
          "default": ""
        },
        "locales": {
          "type": "string",
          "description": "Select the locale(s) in which you want to publish the asset."
        },
        "scheduled_at": {
          "type": "string",
          "description": "Schedule the asset publish in ‘YYYY-MM-DD HH:MM:SS’ format."
        }
      }
    }
  },
  "publish_an_entry": {
    "name": "publish_an_entry",
    "description": "This tool publishes a specified entry from a selected content type to one or more environments and locales within a designated branch of the stack. Content publishing, environments",
    "mapper": {
      "apiUrl": "/v3/content_types/content_type_name/entries/entry_uid/publish",
      "method": "POST",
      "body": "body",
      "queryParams": {
        "publish_with_reference": "publish_with_reference",
        "x-bulk-action": "x-bulk-action"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "content_type_name",
        "entry_uid",
        "environments",
        "locales"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "content_type_name": {
          "type": "string",
          "description": "Select a content type to publish the entry.",
          "default": ""
        },
        "entry_uid": {
          "type": "string",
          "description": "Select an entry's uid to publish.",
          "default": ""
        },
        "locales": {
          "type": "string",
          "description": "Select the locale(s) in which you want to publish the entry."
        },
        "environments": {
          "type": "string",
          "description": "Select the environment(s) in which you want to publish the entry.",
          "default": ""
        },
        "publish_with_reference": {
          "type": "boolean",
          "default": true
        },
        "scheduled_at": {
          "type": "string",
          "description": "Schedule the entry publish in ‘YYYY-MM-DD HH:MM:SS’ format."
        }
      }
    }
  },
  "publish_variants_of_an_entry": {
    "name": "publish_variants_of_an_entry",
    "description": "This tool publishes specified entry variants to selected environments and locales within a defined branch, supporting variant group targeting for content type entries. Keywords: publish, variants",
    "mapper": {
      "apiUrl": "/v3/content_types/content_type_name/entries/entry/publish",
      "method": "POST",
      "body": "body",
      "params": {
        "content_type_name": "content_type_name",
        "entry": "entry"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "content_type_name",
        "entry",
        "environments",
        "locales",
        "variant_ids"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "content_type_name": {
          "type": "string",
          "description": "Select a content type to publish the entry’s variant.",
          "default": ""
        },
        "entry": {
          "type": "string",
          "description": "Select an entry to publish its variant.",
          "default": ""
        },
        "variant_group_uid": {
          "type": "string",
          "description": "Select the Variant Group to publish the variant."
        },
        "variant_ids": {
          "type": "string",
          "description": "Select the variant(s) to publish its content. You can select multiple variants."
        },
        "locales": {
          "type": "string",
          "description": "Select the locale(s) in which you want to publish the entry’s variant. You can select multiple locales."
        },
        "environments": {
          "type": "string",
          "description": "Select the environment(s) in which you want to publish the entry’s variant. You can select multiple environments.",
          "default": ""
        },
        "scheduled_at": {
          "type": "string",
          "description": "Schedule the publish schedule in ‘YYYY-MM-DD HH:MM:SS’ format."
        },
        "publish_with_reference": {
          "type": "boolean",
          "default": true
        },
        "publish_latest_base": {
          "type": "boolean",
          "default": false
        },
        "publish_latest_base_conditionally": {
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "delete_items_from_a_release": {
    "name": "delete_items_from_a_release",
    "description": "This tool programmatically removes specified content items from a designated release within a Contentstack stack branch, requiring the release identifier and item data in JSON format for precise targeting and execution.",
    "mapper": {
      "apiUrl": "/v3/releases/release_id/items",
      "method": "DELETE",
      "body": "item_data",
      "queryParams": {
        "include_branch": "include_branch",
        "all": "all"
      },
      "params": {
        "release_id": "release_id"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "release_id",
        "item_data"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "release_id": {
          "type": "string",
          "description": "Select a release from which you want to remove an item.",
          "default": ""
        },
        "item_data": {
          "type": "string",
          "description": "Enter the item data in JSON format.",
          "default": "{\n        \"items\": [\n          {\n            \"uid\": \"entry_uid\",\n            \"version\": 1,\n            \"locale\": \"en-us\",\n            \"content_type_uid\": \"demo\",\n            \"action\": \"publish\"\n          },\n          {\n            \"uid\": \"asset_uid\",\n            \"version\": 1,\n            \"locale\": \"en-us\",\n            \"content_type_uid\": \"built_io_upload\",\n            \"action\": \"publish\"\n          }\n        ]\n      }"
        },
        "include_branch": {
          "type": "boolean"
        }
      }
    }
  },
  "set_entry_workflow": {
    "name": "set_entry_workflow",
    "description": "This tool assigns a specified workflow stage to a content entry within a defined branch and content type in a Contentstack stack. Workflow management, entry status",
    "mapper": {
      "apiUrl": "/v3/content_types/content_type_name/entries/entry_id/workflow",
      "method": "POST",
      "body": "workflowBody",
      "params": {
        "content_type_name": "content_type_name",
        "entry_id": "entry_id"
      },
      "queryParams": {
        "locale": "locale"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "content_type_name",
        "entry_id",
        "workflow_stage_uid"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "content_type_name": {
          "type": "string",
          "description": "Select a content type to set the workflow stage of an entry.",
          "default": ""
        },
        "entry_id": {
          "type": "string",
          "description": "Select an entry for which you want to set the workflow stage.",
          "default": ""
        },
        "workflow_stage_uid": {
          "type": "string",
          "description": "Select a workflow stage that needs to be set for the entry.",
          "default": ""
        },
        "assigned_to": {
          "type": "string",
          "description": "Select the assignee name(s) to let the user(s) know about the workflow update.",
          "default": ""
        },
        "assigned_by_roles": {
          "type": "string",
          "description": "Select the role(s) to send a notification to all the users with the selected role.",
          "default": ""
        },
        "due_date": {
          "type": "string",
          "description": "Enter the due date to update the workflow in ‘YYYY/MM/DD’ format."
        },
        "notify_via_email": {
          "type": "boolean",
          "default": false
        },
        "comments": {
          "type": "string",
          "description": "Enter a comment for the user to acknowledge the workflow update."
        },
        "locale": {
          "type": "string",
          "description": "Select a locale in which you want to set the entry workflow stage."
        }
      }
    }
  },
  "remove_localization": {
    "name": "remove_localization",
    "description": "This tool removes the localized version of a specified entry in a given locale, restoring the entry to its original non-localized state within the selected branch and content type. Keywords: localization, revert.",
    "mapper": {
      "apiUrl": "/v3/content_types/content_type_name/entries/entry_id/unlocalize",
      "method": "POST",
      "queryParams": {
        "locale": "locale"
      },
      "params": {
        "content_type_name": "content_type_name",
        "entry_id": "entry_id"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "content_type_name",
        "entry_id",
        "locale"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "content_type_name": {
          "type": "string",
          "description": "Select a content type to remove the localized version of the entry.",
          "default": ""
        },
        "entry_id": {
          "type": "string",
          "description": "Select an entry to restore to its original non-localized state.",
          "default": ""
        },
        "locale": {
          "type": "string",
          "description": "Select a locale (language) to remove the entry's localization in the selected locale. The entry must be localized in the selected locale."
        }
      }
    }
  },
  "unpublish_asset": {
    "name": "unpublish_asset",
    "description": "This tool unpublishes a specified asset from selected environments and locales within a given branch, with optional scheduling for deferred execution.",
    "mapper": {
      "apiUrl": "/v3/assets/asset/unpublish",
      "method": "POST",
      "body": "body",
      "params": {
        "asset": "asset"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "asset",
        "environments"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "asset": {
          "type": "string",
          "description": "Select an asset which you want to unpublish.",
          "default": ""
        },
        "environments": {
          "type": "string",
          "description": "Select an environment to unpublish the asset.",
          "default": ""
        },
        "locales": {
          "type": "string",
          "description": "Select the locale in which the asset should be unpublished."
        },
        "scheduled_at": {
          "type": "string",
          "description": "Schedule the asset unpublish in ‘YYYY-MM-DD HH:MM:SS’ format."
        }
      }
    }
  },
  "unpublish_an_entry": {
    "name": "unpublish_an_entry",
    "description": "This tool unpublishes a specified entry from selected environments and locales within a Contentstack stack branch, removing the entry from the CDN and making it inaccessible via delivery APIs. Keywords: unpublish, entry",
    "mapper": {
      "apiUrl": "/v3/content_types/content_type_name/entries/entry/unpublish",
      "method": "POST",
      "body": "body",
      "params": {
        "content_type_name": "content_type_name",
        "entry": "entry"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "content_type_name",
        "entry",
        "environments"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "content_type_name": {
          "type": "string",
          "description": "Select a content type to unpublish the entry.",
          "default": ""
        },
        "entry": {
          "type": "string",
          "description": "Select an entry to unpublish.",
          "default": ""
        },
        "environments": {
          "type": "string",
          "description": "Select the environment(s) from where you want to unpublish the entry.",
          "default": ""
        },
        "locales": {
          "type": "string",
          "description": "Select the locale(s) to unpublish the entry in that locale."
        },
        "scheduled_at": {
          "type": "string",
          "description": "When left blank, the unpublish schedule is set to \"now.\" You may also enter a UTC time in \"YYYY-MM-DD HH:MM:SS\" format."
        }
      }
    }
  },
  "update_an_asset": {
    "name": "update_an_asset",
    "description": "This tool updates metadata or content of a single asset in a specified stack branch by asset ID, supporting modifications to title, description, file name, source URL, and folder assignment. Asset management, update.",
    "mapper": {
      "apiUrl": "/v3/assets/asset_id",
      "method": "PUT",
      "body": "data",
      "params": {
        "asset_id": "asset_id"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "asset_id"
      ],
      "properties": {
        "branch": {
          "type": "string",
          "description": "Select a branch from your stack.",
          "default": "main"
        },
        "asset_id": {
          "type": "string",
          "description": " Select an asset to update."
        },
        "title": {
          "type": "string",
          "description": "Specify a title for the asset."
        },
        "description": {
          "type": "string",
          "description": "Specify a description for the asset."
        },
        "key": {
          "type": "string",
          "description": "Specify a file name for the asset."
        },
        "body": {
          "type": "string",
          "description": "Specify an input URL to update an asset."
        },
        "folder_id": {
          "type": "string",
          "description": "Select a folder to update an asset in it."
        }
      }
    }
  },
  "update_a_taxonomy": {
    "name": "update_a_taxonomy",
    "description": "This tool updates the name and description fields of a specified taxonomy entity using its unique identifier. Keywords: taxonomy, update",
    "mapper": {
      "apiUrl": "/v3/taxonomies/taxonomy_uid",
      "method": "PUT",
      "body": "body",
      "params": {
        "taxonomy_uid": "taxonomy_uid"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "taxonomy_uid",
        "name",
        "description"
      ],
      "properties": {
        "taxonomy_uid": {
          "type": "string",
          "description": "Select a taxonomy to update."
        },
        "name": {
          "type": "string",
          "description": "Specify a title for the taxonomy."
        },
        "description": {
          "type": "string",
          "description": "Specify a description for the taxonomy."
        }
      }
    }
  },
  "update_a_term": {
    "name": "update_a_term",
    "description": "This tool updates the name property of a specified term within a taxonomy using the provided taxonomy_uid and term_uid identifiers.",
    "mapper": {
      "apiUrl": "/v3/taxonomies/taxonomy_uid/terms/term_uid",
      "method": "PUT",
      "body": "body",
      "params": {
        "taxonomy_uid": "taxonomy_uid",
        "term_uid": "term_uid"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "taxonomy_uid",
        "term_uid",
        "name"
      ],
      "properties": {
        "taxonomy_uid": {
          "type": "string",
          "description": "Select a taxonomy to update the term."
        },
        "term_uid": {
          "type": "string",
          "description": "Select a term to update."
        },
        "name": {
          "type": "string",
          "description": "Specify a title to update the term."
        }
      }
    }
  },
  "update_a_variant_of_an_entry": {
    "name": "update_a_variant_of_an_entry",
    "description": "This tool updates the content fields of a specified entry variant within a Variant Group for a given content type, applying the provided changeset to the targeted entry in Contentstack. Keywords: entry update, variant group.",
    "mapper": {
      "apiUrl": "/v3/content_types/content_type_name/entries/entry_id/variants/variant_id",
      "method": "PUT",
      "body": "entry_data",
      "params": {
        "content_type_name": "content_type_name",
        "entry_id": "entry_id",
        "variant_id": "variant_id"
      }
    },
    "inputSchema": {
      "type": "object",
      "required": [
        "variant_group_uid",
        "variant_id",
        "content_type_name",
        "entry_id",
        "entry_data",
        "changeset"
      ],
      "properties": {
        "content_type_name": {
          "type": "string",
          "description": "Select a content type to update the entry's variant.",
          "default": ""
        },
        "entry_id": {
          "type": "string",
          "description": "Select an entry to update its variant.",
          "default": ""
        },
        "variant_group_uid": {
          "type": "string",
          "description": "Select the Variant Group to update the variant."
        },
        "variant_id": {
          "type": "string",
          "description": "Select a variant to update its content."
        },
        "entry_data": {
          "type": "object",
          "description": "The fields should be wrapped by an entry object {'entry':{...data}}"
        },
        "changeset": {
          "type": "string",
          "description": "Enter the change set data in JSON format to update the variant content."
        }
      }
    }
  }
}